// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.5
// source: rpc/fuseftp.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semver        string                 `protobuf:"bytes,1,opt,name=semver,proto3" json:"semver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	mi := &file_rpc_fuseftp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_fuseftp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_rpc_fuseftp_proto_rawDescGZIP(), []int{0}
}

func (x *VersionInfo) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

type AddressAndPort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            []byte                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressAndPort) Reset() {
	*x = AddressAndPort{}
	mi := &file_rpc_fuseftp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressAndPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAndPort) ProtoMessage() {}

func (x *AddressAndPort) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_fuseftp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAndPort.ProtoReflect.Descriptor instead.
func (*AddressAndPort) Descriptor() ([]byte, []int) {
	return file_rpc_fuseftp_proto_rawDescGZIP(), []int{1}
}

func (x *AddressAndPort) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *AddressAndPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type MountIdentifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountIdentifier) Reset() {
	*x = MountIdentifier{}
	mi := &file_rpc_fuseftp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountIdentifier) ProtoMessage() {}

func (x *MountIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_fuseftp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountIdentifier.ProtoReflect.Descriptor instead.
func (*MountIdentifier) Descriptor() ([]byte, []int) {
	return file_rpc_fuseftp_proto_rawDescGZIP(), []int{2}
}

func (x *MountIdentifier) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SetFtpServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *MountIdentifier       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FtpServer     *AddressAndPort        `protobuf:"bytes,2,opt,name=ftp_server,json=ftpServer,proto3" json:"ftp_server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetFtpServerRequest) Reset() {
	*x = SetFtpServerRequest{}
	mi := &file_rpc_fuseftp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFtpServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFtpServerRequest) ProtoMessage() {}

func (x *SetFtpServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_fuseftp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFtpServerRequest.ProtoReflect.Descriptor instead.
func (*SetFtpServerRequest) Descriptor() ([]byte, []int) {
	return file_rpc_fuseftp_proto_rawDescGZIP(), []int{3}
}

func (x *SetFtpServerRequest) GetId() *MountIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetFtpServerRequest) GetFtpServer() *AddressAndPort {
	if x != nil {
		return x.FtpServer
	}
	return nil
}

type MountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The mount point on the local computer. Must be a drive letter on windows
	MountPoint string `protobuf:"bytes,1,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	// If true, then mount everything read-only
	ReadOnly bool `protobuf:"varint,6,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// The ftp_server to connect to
	FtpServer *AddressAndPort `protobuf:"bytes,2,opt,name=ftp_server,json=ftpServer,proto3" json:"ftp_server,omitempty"`
	// Read timout
	ReadTimeout *durationpb.Duration `protobuf:"bytes,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	// The directory on the FTP server that gets mounted
	Directory string `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	// The logrus log level
	LogLevel      string `protobuf:"bytes,5,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountRequest) Reset() {
	*x = MountRequest{}
	mi := &file_rpc_fuseftp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountRequest) ProtoMessage() {}

func (x *MountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_fuseftp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountRequest.ProtoReflect.Descriptor instead.
func (*MountRequest) Descriptor() ([]byte, []int) {
	return file_rpc_fuseftp_proto_rawDescGZIP(), []int{4}
}

func (x *MountRequest) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *MountRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MountRequest) GetFtpServer() *AddressAndPort {
	if x != nil {
		return x.FtpServer
	}
	return nil
}

func (x *MountRequest) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *MountRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *MountRequest) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

var File_rpc_fuseftp_proto protoreflect.FileDescriptor

const file_rpc_fuseftp_proto_rawDesc = "" +
	"\n" +
	"\x11rpc/fuseftp.proto\x12\x16telepresenceio.fuseftp\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/duration.proto\"%\n" +
	"\vVersionInfo\x12\x16\n" +
	"\x06semver\x18\x01 \x01(\tR\x06semver\"4\n" +
	"\x0eAddressAndPort\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\fR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"!\n" +
	"\x0fMountIdentifier\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x95\x01\n" +
	"\x13SetFtpServerRequest\x127\n" +
	"\x02id\x18\x01 \x01(\v2'.telepresenceio.fuseftp.MountIdentifierR\x02id\x12E\n" +
	"\n" +
	"ftp_server\x18\x02 \x01(\v2&.telepresenceio.fuseftp.AddressAndPortR\tftpServer\"\x8c\x02\n" +
	"\fMountRequest\x12\x1f\n" +
	"\vmount_point\x18\x01 \x01(\tR\n" +
	"mountPoint\x12\x1b\n" +
	"\tread_only\x18\x06 \x01(\bR\breadOnly\x12E\n" +
	"\n" +
	"ftp_server\x18\x02 \x01(\v2&.telepresenceio.fuseftp.AddressAndPortR\tftpServer\x12<\n" +
	"\fread_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12\x1c\n" +
	"\tdirectory\x18\x04 \x01(\tR\tdirectory\x12\x1b\n" +
	"\tlog_level\x18\x05 \x01(\tR\blogLevel2\xca\x02\n" +
	"\aFuseFTP\x12F\n" +
	"\aVersion\x12\x16.google.protobuf.Empty\x1a#.telepresenceio.fuseftp.VersionInfo\x12V\n" +
	"\x05Mount\x12$.telepresenceio.fuseftp.MountRequest\x1a'.telepresenceio.fuseftp.MountIdentifier\x12J\n" +
	"\aUnmount\x12'.telepresenceio.fuseftp.MountIdentifier\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\fSetFtpServer\x12+.telepresenceio.fuseftp.SetFtpServerRequest\x1a\x16.google.protobuf.EmptyB*Z(github.com/telepresenceio/go-fuseftp/rpcb\x06proto3"

var (
	file_rpc_fuseftp_proto_rawDescOnce sync.Once
	file_rpc_fuseftp_proto_rawDescData []byte
)

func file_rpc_fuseftp_proto_rawDescGZIP() []byte {
	file_rpc_fuseftp_proto_rawDescOnce.Do(func() {
		file_rpc_fuseftp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_fuseftp_proto_rawDesc), len(file_rpc_fuseftp_proto_rawDesc)))
	})
	return file_rpc_fuseftp_proto_rawDescData
}

var file_rpc_fuseftp_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rpc_fuseftp_proto_goTypes = []any{
	(*VersionInfo)(nil),         // 0: telepresenceio.fuseftp.VersionInfo
	(*AddressAndPort)(nil),      // 1: telepresenceio.fuseftp.AddressAndPort
	(*MountIdentifier)(nil),     // 2: telepresenceio.fuseftp.MountIdentifier
	(*SetFtpServerRequest)(nil), // 3: telepresenceio.fuseftp.SetFtpServerRequest
	(*MountRequest)(nil),        // 4: telepresenceio.fuseftp.MountRequest
	(*durationpb.Duration)(nil), // 5: google.protobuf.Duration
	(*emptypb.Empty)(nil),       // 6: google.protobuf.Empty
}
var file_rpc_fuseftp_proto_depIdxs = []int32{
	2, // 0: telepresenceio.fuseftp.SetFtpServerRequest.id:type_name -> telepresenceio.fuseftp.MountIdentifier
	1, // 1: telepresenceio.fuseftp.SetFtpServerRequest.ftp_server:type_name -> telepresenceio.fuseftp.AddressAndPort
	1, // 2: telepresenceio.fuseftp.MountRequest.ftp_server:type_name -> telepresenceio.fuseftp.AddressAndPort
	5, // 3: telepresenceio.fuseftp.MountRequest.read_timeout:type_name -> google.protobuf.Duration
	6, // 4: telepresenceio.fuseftp.FuseFTP.Version:input_type -> google.protobuf.Empty
	4, // 5: telepresenceio.fuseftp.FuseFTP.Mount:input_type -> telepresenceio.fuseftp.MountRequest
	2, // 6: telepresenceio.fuseftp.FuseFTP.Unmount:input_type -> telepresenceio.fuseftp.MountIdentifier
	3, // 7: telepresenceio.fuseftp.FuseFTP.SetFtpServer:input_type -> telepresenceio.fuseftp.SetFtpServerRequest
	0, // 8: telepresenceio.fuseftp.FuseFTP.Version:output_type -> telepresenceio.fuseftp.VersionInfo
	2, // 9: telepresenceio.fuseftp.FuseFTP.Mount:output_type -> telepresenceio.fuseftp.MountIdentifier
	6, // 10: telepresenceio.fuseftp.FuseFTP.Unmount:output_type -> google.protobuf.Empty
	6, // 11: telepresenceio.fuseftp.FuseFTP.SetFtpServer:output_type -> google.protobuf.Empty
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_fuseftp_proto_init() }
func file_rpc_fuseftp_proto_init() {
	if File_rpc_fuseftp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_fuseftp_proto_rawDesc), len(file_rpc_fuseftp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_fuseftp_proto_goTypes,
		DependencyIndexes: file_rpc_fuseftp_proto_depIdxs,
		MessageInfos:      file_rpc_fuseftp_proto_msgTypes,
	}.Build()
	File_rpc_fuseftp_proto = out.File
	file_rpc_fuseftp_proto_goTypes = nil
	file_rpc_fuseftp_proto_depIdxs = nil
}
